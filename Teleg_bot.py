from telebot import *
from paper import Text2ImageAPI
import base64
from PIL import Image

token='6753527005:AAFfepvf1idMjsbbS6W9U1d4RonDUuFIOX4'
bot = telebot.TeleBot(token)
style = ''
sent = ''

markup_1 = types.ReplyKeyboardMarkup()
markup_2 = types.ReplyKeyboardMarkup()


btn_1 = types.KeyboardButton('–ö–∞–Ω–¥–∏–Ω—Å–∫–∏–π', )
btn_2 = types.KeyboardButton('–î–µ—Ç–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ')
btn_3 = types.KeyboardButton('–ê–Ω–∏–º–µ')
btn_4 = types.KeyboardButton('–°–≤–æ–π —Å—Ç–∏–ª—å')

btn_2_1 = types.KeyboardButton('16:9')
btn_2_2 = types.KeyboardButton('3:2')
btn_2_3 = types.KeyboardButton('1:1')
btn_2_4 = types.KeyboardButton('2:3')
btn_2_5 = types.KeyboardButton('9:16')

markup_1.row(btn_1, btn_2, btn_3, btn_4)
markup_2.row(btn_2_1,btn_2_2,btn_2_3,btn_2_4,btn_2_5)

#–°—Ç–∞—Ä—Ç–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¢–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞ –∏ —Ä–µ–ø–ª–µ–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ /start
@bot.message_handler(commands=['start'])
def start(message):
    markup_3 = types.ReplyKeyboardMarkup()
    btn_3_1 = types.KeyboardButton('–ù–∞—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é')
    markup_3.row(btn_3_1)
    bot.send_message(message.chat.id,'–ó–¥—Ä–∞—Å—Ç–≤—É–π, —ç—Ç–æ –±–æ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∏–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ —Ç–µ–∫—Å—Ç—É –∏–º–µ—é—â–∏–π —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç–∏–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è\n\n'
                                     '<b>–≠—Ç–æ—Ç –±–æ—Ç –±—É–¥–µ—Ç –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –µ—â–µ –±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∏–ª–µ–π –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è'
                                     '. –ó–∞ –∏–¥–µ—è–º–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –ø–∏—à–∏—Ç–µ --> @mgnbv.</b>\n\n', reply_markup=markup_3, parse_mode='html')


#–†–µ–ø–ª–µ–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ /Help
@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id,'–í—ã –¥–æ–ª–∂–Ω—ã –∑–∞–¥–∞—Ç—å, —Å—Ç–∏–ª—å –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ —Ä–∏—Å—É–Ω–∫–∞, –∞ —É–∂–µ –ø–æ—Å–ª–µ <b>–Ω–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç</b>, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Ç–µ–∫—Å—Ç.\n\n'
                                     '–í —Å–ª—É—á–∞–µ –≤—ã—è–≤–ª–µ–Ω–∏ –ø—Ä–æ–±–ª–µ–º –ø–∏—à–∏—Ç–µ --> @mgnbv', parse_mode='html' )


#–†–µ–ø–ª–µ–µ—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö "–§–û–¢–û"
@bot.message_handler(content_types=['photo'])
def start(message):
    # markup = types.InlineKeyboardMarkup()
    # btn_1 = types.InlineKeyboardButton('–µ–¥–∞', url='https://www.russianfood.com/')
    # btn_2 = types.InlineKeyboardButton('—Å–æ–Ω', url="https://www.fgu-obp.ru/news/novosti/10-sovetov-po-uluchsheniyu-sna/")
    # btn_3 = types.InlineKeyboardButton('—Å–ø–æ—Ä—Ç', url="https://www.sports.ru/")
    # markup.row(btn_1,btn_2,btn_3)
    bot.reply_to(message,'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –±–æ—Ç –µ—â–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Ä–∏—Å—É–Ω–∫–∞ –ø–æ —Ñ–æ—Ç–æüòî')


#–†–µ–ø–ª–∞–π–µ—Ä —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¢–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞
@bot.message_handler()
def message(message):
    global style, sent
    if message.text == '–ù–∞—á–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é':
        bot.send_message(message.chat.id, '–¢–∞–∫, –∞ —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å:', reply_markup=markup_1)
    if message.text == '–ö–∞–Ω–¥–∏–Ω—Å–∫–∏–π':
        style = 'KANDINSKY'
        sent = bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...')
        bot.register_next_step_handler(sent, generator)
    if message.text == '–î–µ—Ç–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ':
        style = 'UHD'
        sent = bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...')
        bot.register_next_step_handler(sent, generator)
    if message.text == '–ê–Ω–∏–º–µ':
        style = 'ANIME'
        sent = bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...')
        bot.register_next_step_handler(sent, generator)
    if message.text == '–°–≤–æ–π —Å—Ç–∏–ª—å':
        style = 'DEFAULT'
        sent = bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...')
        bot.register_next_step_handler(sent, generator)
    if message.text.lower() in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞—Å—Ç–≤—É–π']:
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}, –∫–∞–∫ –¥–µ–ª–∞')
    if message.text.lower() == 'id':
        bot.send_message(message.chat.id, f'ID: {message.from_user.id}')



def generator(message):
    global style, sent
    bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –ø—Ä–∏–¥–µ—Ç—Å—è –ø–æ–¥–æ–∂–¥–∞—Ç—å...')
    api = Text2ImageAPI('https://api-key.fusionbrain.ai/', 'CB68F40CEFD78AD5EE6A1018FDA46819', 'D120B2D968C4AB6BAE6B92B93FFA3EEB')
    model_id = api.get_model()
    uuid = api.generate(message.text, model_id, style='')
    images = api.check_generation(uuid)
    with open(r'C:\Users\Huawei\OneDrive\–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª\teleg\output_path' + message.from_user.username, 'wb') as f:
        for i in images:
            f.write(base64.b64decode(i))
        imj_obj = Image.open(r'C:\Users\Huawei\OneDrive\–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª\teleg\output_path' + message.from_user.username)
        bot.send_photo(message.chat.id,imj_obj)


#–ó–∞–ø—É—Å–∫–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–µ–Ω–∏–π
bot.polling()
